import javafx.application.Application;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.geometry.Insets;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.Slider;
import javafx.scene.layout.GridPane;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
 
public class HelloWorld extends Application {
 
    final Slider startVal = new Slider(1, 99, 1);
    final Slider endVal = new Slider(1, 99, 99);
    
    final Label startCaption = new Label("Start Number:");
    final Label endCaption = new Label("End Number:");
 
    final Label startValue = new Label(
        Double.toString(startVal.getValue()));
    final Label endValue = new Label(
        Double.toString(endVal.getValue()));
 
    final static Color textColor = Color.BLACK;
 
    public void start(Stage stage) {
        Group root = new Group();
        Scene scene = new Scene(root, 600, 400);
        stage.setScene(scene);
        stage.setTitle("Slider Sample");
        scene.setFill(Color.WHITE);
 
        GridPane grid = new GridPane();
        grid.setPadding(new Insets(10, 10, 10, 10));
        grid.setVgap(10);
        grid.setHgap(70);
 
        
        scene.setRoot(grid);
        
        startCaption.setTextFill(textColor);
        GridPane.setConstraints(startCaption, 0, 1);
        grid.getChildren().add(startCaption);
        
        startVal.setMajorTickUnit(50);
        startVal.setMinorTickCount(5);
        startVal.setSnapToTicks(false);
        startVal.setShowTickMarks(true);
        System.out.println(startVal.getMinorTickCount());
        
        startVal.valueProperty().addListener(new ChangeListener<Number>() {
            public void changed(ObservableValue<? extends Number> ov,
                Number old_val, Number new_val) {
                    startValue.setText(ov.toString());
            }
        });
 
        GridPane.setConstraints(startVal, 1, 1);
        grid.getChildren().add(startVal);
 
        startValue.setTextFill(textColor);
        GridPane.setConstraints(startValue, 2, 1);
        grid.getChildren().add(startValue);
 
        endCaption.setTextFill(textColor);
        GridPane.setConstraints(endCaption, 0, 2);
        grid.getChildren().add(endCaption);
 
        endVal.valueProperty().addListener(new ChangeListener<Number>() {
            public void changed(ObservableValue<? extends Number> ov,
                Number old_val, Number new_val) {
                    endValue.setText(String.format("%.2f", new_val));
            }
        });
        GridPane.setConstraints(endVal, 1, 2);
        grid.getChildren().add(endVal);
 
        endValue.setTextFill(textColor);
        GridPane.setConstraints(endValue, 2, 2);
        grid.getChildren().add(endValue);
 
        stage.show();
    }
 
    public static void main(String[] args) {
        launch(args);
    }
}
